# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PostgreSQL –∏ –¥–ª—è —á—Ç–µ–Ω–∏—è CSV-—Ñ–∞–π–ª–æ–≤
import psycopg2 
import csv 

# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def connect():
    try:
        conn = psycopg2.connect(
            dbname="phonebook",     # –ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            user="postgres",        # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è PostgreSQL
            password="2006",        # –ü–∞—Ä–æ–ª—å –æ—Ç PostgreSQL
            host="localhost",       # –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
            port="5432"             # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç PostgreSQL
        )
        return conn, conn.cursor()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL
    except Exception as e:
        print("Database connection error:", e)
        exit()

# –í–≤–æ–¥ –∑–∞–ø–∏—Å–∏ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å
def insert_from_console(cur, conn):
    name = input("Enter name: ")
    phone = input("Enter phone number: ")
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É
    cur.execute("INSERT INTO phonebook (username, phone) VALUES (%s, %s)", (name, phone))
    conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ
    print("The entry has been added.")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV-—Ñ–∞–π–ª–∞
def insert_from_csv(cur, conn, filename):
    try:
        with open(filename, newline='', encoding='utf-8') as f:
            reader = csv.reader(f)
            next(reader, None)  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            for row in reader:
                if len(row) >= 2:
                    # –í—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É (–∏–º—è –∏ –Ω–æ–º–µ—Ä)
                    cur.execute("INSERT INTO phonebook (username, phone) VALUES (%s, %s)", (row[0], row[1]))
            conn.commit()
            print("The CSV data has been successfully added.") # –î–∞–Ω–Ω—ã–µ –∏–∑ CSV —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã.
    except FileNotFoundError:
        print("The file was not found.") # –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.
    except Exception as e:
        print("Error when working with CSV:", str(e)) # –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å CSV:

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏/–∏–ª–∏ –Ω–æ–º–µ—Ä–∞ –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def update_user(cur, conn, name, new_name=None, new_phone=None):
    if new_name:
        cur.execute("UPDATE phonebook SET username = %s WHERE username = %s", (new_name, name))
    if new_phone:
        cur.execute("UPDATE phonebook SET phone = %s WHERE username = %s", (new_phone, name))
    conn.commit()
    print("The record has been updated.") # –ó–∞–ø–∏—Å—å –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.

# –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É
def search_user(cur, value):
    cur.execute("SELECT * FROM phonebook WHERE username = %s OR phone = %s", (value, value))
    results = cur.fetchall()
    if results:
        for row in results:
            print(row)
    else:
        print("No records were found.") # –ó–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.

# –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –Ω–æ–º–µ—Ä—É
def delete_user(cur, conn, value):
    cur.execute("DELETE FROM phonebook WHERE username = %s OR phone = %s", (value, value))
    conn.commit()
    print("The record has been deleted (if found).") # –ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞ (–µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞).

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
def show_all(cur):
    cur.execute("SELECT * FROM phonebook")
    rows = cur.fetchall()
    if rows:
        print("\nüìã All entries in the PhoneBook:") # –í—Å–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ:
        for row in rows:
            print(row)
    else:
        print("The table is empty.") # –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞.

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è
def main():
    conn, cur = connect()  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    try:
        while True:
            print("\n--- Welcome to the PhoneBook! ---") # 
            print("1. Add an entry (manually)") # 1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å (–≤—Ä—É—á–Ω—É—é)
            print("2. Add from CSV") # 2. –î–æ–±–∞–≤–∏—Ç—å –∏–∑ CSV
            print("3. Update the record") # 3. –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
            print("4. Find an entry") # 4. –ù–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å
            print("5. Delete the entry") # 5. –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å
            print("6. Show the entire table") # 6. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—é —Ç–∞–±–ª–∏—Ü—É
            print("0. Exit") # 0. –í—ã—Ö–æ–¥

            choice = input("Select an action: ") # –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: 

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if choice == "1":
                insert_from_console(cur, conn)
            elif choice == "2":
                filename = input("Enter the name of the CSV file (for example, data.csv): ") # –í–≤–µ–¥–∏—Ç–µ –∏–º—è CSV-—Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, data.csv): 
                insert_from_csv(cur, conn, filename)
            elif choice == "3":
                name = input("Enter a name for the update: ") # –í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: 
                new_name = input("New name (or Enter to skip): ") # –ù–æ–≤–æ–µ –∏–º—è (–∏–ª–∏ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å): 
                new_phone = input("New number (or Enter to skip): ") # –ù–æ–≤—ã–π –Ω–æ–º–µ—Ä (–∏–ª–∏ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):
                update_user(cur, conn, name, new_name if new_name else None, new_phone if new_phone else None)
            elif choice == "4":
                value = input("Enter a name or number to search for: ") # –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞: 
                search_user(cur, value)
            elif choice == "5":
                value = input("Enter a name or number to delete: ") #  –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –Ω–æ–º–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: 
                delete_user(cur, conn, value)
            elif choice == "6":
                show_all(cur)
            elif choice == "0":
                print("Exit the program.") # –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
                break
            else:
                print("Wrong choice. Try again.") # –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    finally:
        cur.close()
        conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç
if __name__ == "__main__":
    main()
